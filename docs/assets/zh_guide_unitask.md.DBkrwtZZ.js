import{_ as a,c as e,o as n,f as t}from"./chunks/framework.BG74BkEs.js";const u=JSON.parse('{"title":"UniTask","description":"","frontmatter":{},"headers":[],"relativePath":"zh/guide/unitask.md","filePath":"zh/guide/unitask.md","lastUpdated":1698833889000}'),s={name:"zh/guide/unitask.md"},i=t('<h1 id="unitask" tabindex="-1">UniTask <a class="header-anchor vp-link" href="#unitask" aria-label="Permalink to &quot;UniTask&quot;">​</a></h1><p><a href="https://github.com/Cysharp/UniTask" class="vp-link" target="_blank" rel="noreferrer">UniTask<span class="external-link-icon"> ↗</span></a> 是基于(MIT license)的开源库，提供的高效的基于任务的异步编程实现（与<a href="https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.task" class="vp-link" target="_blank" rel="noreferrer">.NET native<span class="external-link-icon"> ↗</span></a> 相比）。你可以在<a href="https://medium.com/@neuecc/a1ff0766029" class="vp-link" target="_blank" rel="noreferrer">作者文章库<span class="external-link-icon"> ↗</span></a>找到更多说明和使用示例。</p><p>Naninovel的所有异步方法都是使用UniTask构建的；为了使用公共API（例如，添加自定义命令或引擎服务的实现），应该在您的Unity项目中安装该库。Naninovel为方便起见内附了UniTask的副本。如果您已经安装了该库，请删除<code>Naninovel/ThirdParty/UniTask</code> 目录以防止冲突。</p>',3),r=[i];function o(c,l,p,_,k,d){return n(),e("div",null,r)}const f=a(s,[["render",o]]);export{u as __pageData,f as default};
